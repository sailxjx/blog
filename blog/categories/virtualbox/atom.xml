<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: virtualbox | novolander]]></title>
  <link href="http://sailxjx.github.com/blog/blog/categories/virtualbox/atom.xml" rel="self"/>
  <link href="http://sailxjx.github.com/blog/"/>
  <updated>2013-03-06T16:23:07+08:00</updated>
  <id>http://sailxjx.github.com/blog/</id>
  <author>
    <name><![CDATA[tristan]]></name>
    <email><![CDATA[sailxjx@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[virtualbox hates sendfile]]></title>
    <link href="http://sailxjx.github.com/blog/blog/2013/02/18/virtualbox-hates-sendfile/"/>
    <updated>2013-02-18T16:39:00+08:00</updated>
    <id>http://sailxjx.github.com/blog/blog/2013/02/18/virtualbox-hates-sendfile</id>
    <content type="html"><![CDATA[<p>事情的起因是这个样子滴~</p>

<p>代码文件都放在mac中，运行环境在virtualbox中，通过mount主机的文件夹来工作，相信很多同学都搭建过这样的环境，一切相安无事，直到某一天。。。</p>

<p>修改过的静态文件不生效了！</p>

<p>本来以为是nginx中缓存设置的问题，使尽各种解数，包括把expires设置为off，header中加Expire为0，给文件加时间戳，依然如此。果断google之，原来是virtualbox使用的特殊文件系统造成的。</p>

<p>apache和nginx中都有个默认开启的选项sendfile，表示通过内核文件指针来读取或复制文件，在vboxsf(virtualbox共享文件所使用的文件系统)中，sendfile会造成文件无法更新。于是我们无论怎么刷新，都只能看到第一次访问得到的文件了。</p>

<p>解决办法也很简单，将nginx.conf中设置<code>sendfile off</code>就可以了。</p>

<p>由于这个问题折腾了我很久，特此记录一下，同时借用某同样遇到此问题的<a href="http://abitwiser.wordpress.com/2011/02/24/virtualbox-hates-sendfile/">blog标题</a>。</p>

<h2>后记</h2>

<p>1.<a href="https://forums.virtualbox.org/viewtopic.php?f=1&amp;t=24905">virtualbox论坛</a>2009年的时候就有人讨论过这个问题，那时候的版本还是3.0，现在都4.2了，问题仍然没有得到解决，唉~被oracle X过的软件果然不行啊~。</p>

<p>2.在主机中修改文件，虚拟机中的inode不会变化，反过来也一样，不知道是不是因为vboxsf的问题，然而使用samba共享的文件系统中两边的inode是同时变化的。</p>

<h2>参考资料</h2>

<ul>
<li><a href="http://abitwiser.wordpress.com/2011/02/24/virtualbox-hates-sendfile/">VirtualBox Hates Sendfile</a></li>
<li><a href="http://serverfault.com/questions/269420/disable-caching-when-serving-static-files-with-nginx-for-development">serverfault</a></li>
<li><a href="https://forums.virtualbox.org/viewtopic.php?f=1&amp;t=24905">virtualbox forum</a></li>
<li><a href="http://wiki.nginx.org/HttpCoreModule#sendfile">nginx wiki</a></li>
<li><a href="http://comments.gmane.org/gmane.linux.kernel.cifs/3517">mac中samba共享的问题</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vagrant 打包与发布]]></title>
    <link href="http://sailxjx.github.com/blog/blog/2013/02/06/vagrant-da-bao-yu-fa-bu/"/>
    <updated>2013-02-06T14:31:00+08:00</updated>
    <id>http://sailxjx.github.com/blog/blog/2013/02/06/vagrant-da-bao-yu-fa-bu</id>
    <content type="html"><![CDATA[<p>上次失败的<a href="/blog/2012/12/11/vagrant-bi-ji/">vagrant尝试</a>之后，很久没有再去捣鼓这玩意儿，最近又想试一试，居然一举成功了，特别记录一下。</p>

<h2>打包</h2>

<p>上手第一件事就是制作自己的box，网上已经有了许多现成的<a href="http://www.vagrantbox.es/">各linux版本box</a></p>

<p>首先用virtualbox安装好自己的linux，版本任选，我这里用的是ubuntu server 12.10，虚拟机名是<code>ubuntu_server_12.10</code>，装好后在其中添加<code>vagrant</code>账号。再用下面的命令就可以生成自己的box了。</p>

<blockquote><p>vagrant package --base ubuntu_server_12.10 --output vagrant_ubuntu.box</p></blockquote>

<p>这样就在当前目录下生成了一个vagrant_ubuntu.box文件，压缩前原始vdi文件在1.4G左右，打包后的box是415M，压缩比还是不错的。</p>

<h2>导入</h2>

<p>下面就是导入box文件了。</p>

<blockquote><p>vagrant box add vagrant_ubuntu vagrant_ubuntu.box</p></blockquote>

<p>vagrant的磁盘文件储存在<code>~/.vagrant.d/</code>文件夹中。导入之后用下面的命令生成一个'Vagrantfile'配置文件</p>

<blockquote><p>vagrant init</p></blockquote>

<p>然后就可以通过<code>up</code>命令启动虚拟机了</p>

<blockquote><p>vagrant up</p></blockquote>

<h2>ssh</h2>

<p>如果不做任何修改，虚拟机默认使用的是NAT的连接方式，而且做了一个端口转发(22->2222)，这个时候直接通过<code>vagrant ssh</code>命令或22端口是登陆不了虚拟机的，需要在Vagrantfile中添加下面两项</p>

<blockquote><p>config.ssh.port = 2222</p>

<p>config.ssh.private_key_path = "/Users/tristan/.ssh/id_rsa"</p></blockquote>

<p>其中第一项指定使用本机的2222作为ssh端口，其中第二项是指定使用的私钥路径，如果事先在虚拟机中加入了对应的公钥，这样连接时就可以免去输入密码的步骤。(还要注意的是网上大部分box都是使用vagrant用户名，密码也是vagrant，算是一个便于传播的约定)。现在可以看一下ssh配置。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>tristan@bran:vagrant<span class="nv">$ </span>vagrant ssh-config
</span><span class='line'>Host default
</span><span class='line'>  HostName 127.0.0.1
</span><span class='line'>  User vagrant
</span><span class='line'>  Port 2222
</span><span class='line'>  UserKnownHostsFile /dev/null
</span><span class='line'>  StrictHostKeyChecking no
</span><span class='line'>  PasswordAuthentication no
</span><span class='line'>  IdentityFile /Users/tristan/.ssh/id_rsa
</span><span class='line'>  IdentitiesOnly yes
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后使用下面的命令，就可以直接登录虚拟机了。</p>

<blockquote><p>vagrant ssh</p></blockquote>

<p>包括下面的一系列命令，也均可以使用。</p>

<ul>
<li><code>vagrant up</code> 启动</li>
<li><code>vagrant halt</code> 关机</li>
<li><code>vagrant reload</code> 重启</li>
<li><code>vagrant suspend</code> 休眠</li>
</ul>


<p>总而言之，搞定ssh，一切就很顺利鸟。</p>
]]></content>
  </entry>
  
</feed>
