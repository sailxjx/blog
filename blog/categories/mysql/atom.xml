<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mysql | novolander]]></title>
  <link href="http://sailxjx.github.com/blog/blog/categories/mysql/atom.xml" rel="self"/>
  <link href="http://sailxjx.github.com/blog/"/>
  <updated>2013-03-04T13:48:19+08:00</updated>
  <id>http://sailxjx.github.com/blog/</id>
  <author>
    <name><![CDATA[tristan]]></name>
    <email><![CDATA[sailxjx@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mysql 多实例启动]]></title>
    <link href="http://sailxjx.github.com/blog/blog/2012/08/13/mysql-duo-shi-li-qi-dong/"/>
    <updated>2012-08-13T17:03:00+08:00</updated>
    <id>http://sailxjx.github.com/blog/blog/2012/08/13/mysql-duo-shi-li-qi-dong</id>
    <content type="html"><![CDATA[<p>当开发与生产环境在同一台机器上，或需要在一台机器上部署多套测试环境时，往往需要同时起多个mysqld进程，最近帮测试搭环境的时候就碰到了这样的问题。</p>

<p>还是从安装mysql开始，下载tarball安装，</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>安装mysql  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>groupadd mysql
</span><span class='line'>useradd -g mysql mysql
</span><span class='line'>cmake . -DCMAKE_INSTALL_PREFIX<span class="o">=</span>/usr/local/mysql5.5.27/  -DMYSQL_DATADIR<span class="o">=</span>/data/mysql  -DWITH_INNOBASE_STORAGE_ENGINE<span class="o">=</span>1  -DMYSQL_TCP_PORT<span class="o">=</span>3306  -DMYSQL_UNIX_ADDR<span class="o">=</span>/var/run/mysql/mysql.sock -DWITH_DEBUG<span class="o">=</span>0
</span><span class='line'>make &amp;amp;&amp;amp; make install
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后配置my.cnf，从support-files里面拷贝一个my-medium.cnf到/etc/my.cnf，里面mysqld配置段的内容基本是这个样子</p>

<p>Liquid error: ClassNotFound: no lexer for alias 'cnf' found</p>

<p>默认mysqld只启动一个实例，既然我们的目的是启动多个mysqld实例，需要使用mysqld_multi。它是一个perl脚本，在使用之前，需要给my.cnf加一些料。</p>

<p>Liquid error: ClassNotFound: no lexer for alias 'cnf' found</p>

<p>然后依配置创建mysql运行时文件夹并用mysql_install_db脚本初始化系统库
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir -p /data/mysql1 /data/mysql2 /var/log/mysql /var/run/mysql
</span><span class='line'>chgrp mysql /data/mysql&lt;em&gt; /var/log/mysql /var/run/mysql
</span><span class='line'>chown mysql /data/mysql&lt;/em&gt; /var/log/mysql /var/run/mysql
</span><span class='line'>mysql_install_db --datadir<span class="o">=</span>/data/mysql1 --user<span class="o">=</span>mysql
</span><span class='line'>mysql_install_db --datadir<span class="o">=</span>/data/mysql2 --user<span class="o">=</span>mysql
</span><span class='line'>mysqld_multi start 1-2
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最后一条命令其实已经将我们配置好的mysqld1和mysqld2启动了，这时候在进程表中应该能看到两个mysqld进程，试着用-P参数指定端口能分别访问在/data/mysql1和/data/mysql2下面的两个库，两者互不影响，正好能满足测试的要求。当然需要配置更多的实例也是可以的。</p>

<h2 id="mysql_extra">额外收获</h2>


<p>这次配置过程中还遇到一些额外的问题，记下来备忘。</p>

<ul>
<li>假如使用的是ubuntu(我目前的版本还是11.10)，默认会安装apparmor，这个软件是一个诡异的存在，它就像一个暗恋者，一直默默限制软件的访问权限，然后又不被系统待见，以至于我根本不知道它的存在。其实它是一个白名单，在/etc/apparmor.d/中指定了/usr/sbin/mysqld对各文件的访问权限，当我想将mysql的数据文件夹迁移到别的位置时，一直报这个错误</li>
</ul>


<p><code>Can't create test file /data/mysql1/littleboy.lower-test</code></p>

<p>而令人费解的就是mysql对这些文件夹是有读写权限的，其实只需要编辑/etc/apparmor.d/usr.sbin.mysqld文件，依样画葫芦地为文件夹加上rw权限就可以了</p>

<ul>
<li>给mysql设置远程访问权限，只需要下面这条sql</li>
</ul>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">INSERT</span> <span class="n">mysql</span><span class="p">.</span><span class="k">user</span> <span class="p">(</span> <span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">Host</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">User</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="p">,</span> <span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">Password</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span> <span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span> <span class="s1">&#39;%&#39;</span><span class="p">,</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span> <span class="n">PASSWORD</span><span class="p">(</span><span class="s1">&#39;123456&#39;</span><span class="p">)</span> <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中最关键的就是那个'%'，表示通过任意host均可以访问到本机的mysql</p>

<ul>
<li>给mysql设置密码。</li>
</ul>


<p><code>mysqladmin -u root -h 127.0.0.1 password 123456</code></p>

<p>上面那种是在不登录mysql的情况下修改密码，还有两种可以通过改表的方式。见<a href="#mysql_refer">MySQL设置密码的三种方法</a></p>

<p>修改过密码以后，mysqld_multi可能就不能通过默认配置来结束mysqld进程了，这时候需要在配置里加上用户名和密码</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[mysqld_multi]
</span><span class='line'>mysqld = /usr/local/mysql/bin/mysqld
</span><span class='line'>mysqladmin = /usr/local/mysql/bin/mysqladmin
</span><span class='line'>user = root
</span><span class='line'>password = 123456</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>当然这样可能会有一些安全隐患，因为my.cnf是可见的。假如是多人使用，可以将password这行去掉，每次操作mysqld_multi的时候，在后面加上<code>--password=123456</code>参数就行了</p>

<h2 id="mysql_refer">参考资料</h2>


<ul>
<li><a href="http://www.neocanable.com/error-for-mysql-multi-and-mysql-install-db/">解决apparmor引起的报错1</a></li>
<li><a href="http://ubuntuforums.org/showthread.php?t=1861136">解决apparmor引起的报错2</a></li>
<li><a href="http://blog.csdn.net/magicbreaker/article/details/2392764">MySQL设置密码的三种方法</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
