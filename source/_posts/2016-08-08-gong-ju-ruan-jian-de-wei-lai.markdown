---
layout: post
title: "工具软件的未来"
date: 2016-08-08 16:25
comments: true
categories: 
- software
- tweet
---

上一篇[工具软件的困境][1]分析了我对工具软件现状的看法，归纳一下就是两个问题：1. 使用体验难创新。2. 用户需求难覆盖。下面说一下我的解法。

# 新的平台

颠覆性的创新更容易出现在新的平台上，移动设备的普及让人们习惯了手势操作。但在今天，移动设备上做交互创新已然不是一个明智的选择，而新的平台其实就在我们身边。

一个叫 Pokemon GO 的游戏火遍了全世界，其最大的特点就是利用了增强现实技术，让人们在现实世界中寻找游戏的乐趣。

增强现实和虚拟现实之所以有吸引力，是因为他能给人带来新奇的同时又不感到陌生，天然的容易上手。工具软件在这个领域大有作为，例如，如今许多人喜欢用电子名片，或者把自己的信息发布在互联网上，如果软件能通过摄像头识别出对方并且显示信息的话，对于我这种永远记不住陌生人名字的人来说，实在算是一种福音。同样适用这种技术还有地图，视频，社交，以及很多意想不到的地方，充斥着生活的方方面面。

如果觉得新的平台实验性太强，那么在旧的平台上，也可以用新的方式来创新。在我看来，语音在移动平台上还没有完全发挥出应有的作用，目前的技术对于语音识别的准确率已经完全没有问题，难点在于对语义的分析和揣测用户的目的。Siri 大家都觉得好玩，但是不好用，问题就在于人们不知道能用它干什么，Siri 也「听」不懂你想干什么。而这在目标比较单一的工具软件中就能得到很好的应用。如果有一款应用是用来推荐餐馆的，那么我更乐于通过自然语言的方式让他为我推荐附近好吃的餐馆，而不是每次想好了关键词再写在输入框里。

# 海纳百川

工具软件需要应对用户提出的各种需求，这些需求零散，独立，无法整合在一个应用中，然而对于留住用户又必不可少。传统软件的做法是自己开发，然后发行一款配置无限繁琐的软件，或者针对大客户做定制化开发。这种做法在工具匮乏的时代可以在市场中站稳脚跟，如今成本这么高的做法是走不通了。

于是就出现了开放 API，各个软件将自己的 API 开放出来，供其他软件接入。这在工具类软件中尤其鲜明。一款好用的软件，只需要做好自己的核心功能，并接入其他优秀软件。

仔细想一想，这其实就是各种软件在做的「应用平台」。但是我不愿意将它称作「平台」，而更乐意称作「协议」。「平台」意味着大家只能加入到我的软件生态中来，「协议」则表明了一种开放的态度，大家可以自由的选择与我的协议对接，或选择其他应用的协议，甚至利用我的协议，和其他第三方应用对接。

# 服务至上

软件作为一种看不见摸不着的产品，天然的隔绝了用户和开发者，用户看不到开发软件背后的付出，于是很容易低估软件的成本。现实的软件发行方式也增强了用户的这种观念，大部分软件都以免费的方式发行，软件变得和说明书一样，成为了「载体」的附庸。

而在其他领域，用户的付费意愿则比软件高得多，用户拿到一台相机，很容易通过做工和质感估算出这台相机的成本，而其附带的软件则看起来一文不值。甚至改变了世界的 iPhone，大部分用户还是直接将它和手里的手机划上等号，而很少有人去了解 iOS 的成本。

这种观念根深蒂固，那么工具软件该从另一个角度出发，找到自己的「载体」。如果工具软件没有对应的硬件，可以将与软件配套的服务作为「载体」来出售。例如给用户的咨询，培训，发展线下的社区，一方面可以给开发者带来直接的收益，同时也大大提高了用户粘性。一款软件能否和竞争者拉开差距，更多的是看与软件配套的服务，我想这也是「软件即服务」的定义。

# 写在最后

在软件这个行业，每天都能看到很多很棒的点子，希望这些点子能尽早变成现实，而不是像我这样的拖延症患者，挖了[一堆][2]的[坑][3]，离完成却遥遥无期。

[1]:	2016-08-08-gong-ju-ruan-jian-de-kun-jing "工具软件的困境"
[2]:	https://github.com/sailxjx/Cycle "Cycle"
[3]:	https://github.com/sailxjx/storyship "Storyship"